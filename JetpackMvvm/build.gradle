plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.maven.publish)
}

android {
    namespace "me.hgj.jetpackmvvm"
    compileSdkVersion  36
    defaultConfig {
        minSdk  21
        targetSdk  36
        versionCode 23
        versionName "2.0.1"

        consumerProguardFiles "consumer-rules.pro"
    }

    buildFeatures {
        viewBinding = true
    }

    kotlin {
        jvmToolchain(17) // 自动设置 Java 17 兼容性
    }
    publishing {
        singleVariant("release")
    }
}

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.hegaojian'
                artifactId = 'JetpackMvvm'
                version = '2.0.1'
            }
        }
    }
}

dependencies {
    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.appcompat)
    implementation(libs.material)
    implementation(libs.androidx.activity)
    implementation(libs.androidx.fragment.ktx)
    implementation(libs.androidx.constraintlayout)
    implementation libs.flexbox

    // 快速构建RV列表工具
    api libs.brv
    // 协程基础库
    api libs.kotlinx.coroutines.core
    api libs.kotlinx.coroutines.android
    //lifecycle
    api libs.androidx.lifecycle.runtime.ktx
    // viewModel
    api libs.androidx.lifecycle.viewmodel.ktx
    // liveData
    api libs.androidx.lifecycle.livedata.ktx

    //Toast，使用可在任意地方 message.toast()
    api libs.toaster
    //log
    api libs.log
    //json数据解析，框架封装可看 GsonExt 类
    api libs.gson
    api libs.dialog
    api libs.dialog.lifecycle
    api libs.immersionbar
    //缓存框架，框架封装 在 Cache 类 中
    api libs.mmkv
    //glide 图片框架，框架封装可看 ImageConfig 类
    implementation libs.glide
    //http
    implementation libs.okhttp
    //refresh刷新
    api libs.refresh.layout.kernel
    api libs.refresh.header.classics
    //利用liveData发送全局消息
    api libs.unpeek.livedata
    //通过标签直接生成shape，无需再写shape.xml
    api libs.backgroundlibrary.library
    //权限申请
    api libs.permissions
}